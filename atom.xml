<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Juuichi</title>
  
  <subtitle>张宇驰的blog</subtitle>
  <link href="http://zhang2514yuchi.github.io/atom.xml" rel="self"/>
  
  <link href="http://zhang2514yuchi.github.io/"/>
  <updated>2022-12-15T12:04:27.797Z</updated>
  <id>http://zhang2514yuchi.github.io/</id>
  
  <author>
    <name>Juuichi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://zhang2514yuchi.github.io/2022/12/15/regex/"/>
    <id>http://zhang2514yuchi.github.io/2022/12/15/regex/</id>
    <published>2022-12-15T11:26:32.000Z</published>
    <updated>2022-12-15T12:04:27.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是正则表达式？"><a href="#什么是正则表达式？" class="headerlink" title="什么是正则表达式？"></a>什么是正则表达式？</h2><blockquote><p>正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。</p></blockquote><p>一个正则表达式是一种从左到右匹配主体字符串的模式。<br>“Regular expression”这个词比较拗口，我们常使用缩写的术语“regex”或“regexp”。<br>正则表达式可以从一个基础字符串中根据一定的匹配模式替换文本中的字符串、验证表单、提取字符串等等。</p><p>想象你正在写一个应用，然后你想设定一个用户命名的规则，让用户名包含字符、数字、下划线和连字符，以及限制字符的个数，好让名字看起来没那么丑。<br>我们使用以下正则表达式来验证一个用户名：</p><img src="/.io//12/15/regex/1.png" class><p><img src="/.io//1.png"></p><p>以上的正则表达式可以接受 <code>john_doe</code>、<code>jo-hn_doe</code>、<code>john12_as</code>。<br>但不匹配<code>Jo</code>，因为它包含了大写的字母而且太短了。</p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#1-%E5%9F%BA%E6%9C%AC%E5%8C%B9%E9%85%8D">1. 基本匹配</a></li><li><a href="#2-%E5%85%83%E5%AD%97%E7%AC%A6">2. 元字符</a><ul><li><a href="#21-%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6-">2.1 点运算符 .</a></li><li><a href="#22-%E5%AD%97%E7%AC%A6%E9%9B%86">2.2 字符集</a><ul><li><a href="#221-%E5%90%A6%E5%AE%9A%E5%AD%97%E7%AC%A6%E9%9B%86">2.2.1 否定字符集</a></li></ul></li><li><a href="#23-%E9%87%8D%E5%A4%8D%E6%AC%A1%E6%95%B0">2.3 重复次数</a><ul><li><a href="#231--%E5%8F%B7">2.3.1 * 号</a></li><li><a href="#232--%E5%8F%B7">2.3.2 + 号</a></li><li><a href="#233--%E5%8F%B7">2.3.3 ? 号</a></li></ul></li><li><a href="#24--%E5%8F%B7">2.4 {} 号</a></li><li><a href="#25--%E7%89%B9%E5%BE%81%E6%A0%87%E7%BE%A4">2.5 (…) 特征标群</a></li><li><a href="#26--%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6">2.6 | 或运算符</a></li><li><a href="#27-%E8%BD%AC%E7%A0%81%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6">2.7 转码特殊字符</a></li><li><a href="#28-%E9%94%9A%E7%82%B9">2.8 锚点</a><ul><li><a href="#281--%E5%8F%B7">2.8.1 ^ 号</a></li><li><a href="#282--%E5%8F%B7">2.8.2 $ 号</a></li></ul></li></ul></li><li><a href="#3-%E7%AE%80%E5%86%99%E5%AD%97%E7%AC%A6%E9%9B%86">3. 简写字符集</a></li><li><a href="#4-%E9%9B%B6%E5%AE%BD%E5%BA%A6%E6%96%AD%E8%A8%80%E5%89%8D%E5%90%8E%E9%A2%84%E6%9F%A5">4. 零宽度断言(前后预查)</a><ul><li><a href="#41--%E6%AD%A3%E5%85%88%E8%A1%8C%E6%96%AD%E8%A8%80">4.1 ?&#x3D;… 正先行断言</a></li><li><a href="#42--%E8%B4%9F%E5%85%88%E8%A1%8C%E6%96%AD%E8%A8%80">4.2 ?!… 负先行断言</a></li><li><a href="#43---%E6%AD%A3%E5%90%8E%E5%8F%91%E6%96%AD%E8%A8%80">4.3 ?&lt;&#x3D; … 正后发断言</a></li><li><a href="#44--%E8%B4%9F%E5%90%8E%E5%8F%91%E6%96%AD%E8%A8%80">4.4 ?&lt;!… 负后发断言</a></li></ul></li><li><a href="#5-%E6%A0%87%E5%BF%97">5. 标志</a><ul><li><a href="#51-%E5%BF%BD%E7%95%A5%E5%A4%A7%E5%B0%8F%E5%86%99-case-insensitive">5.1 忽略大小写（Case Insensitive）</a></li><li><a href="#52-%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2-global-search">5.2 全局搜索（Global search）</a></li><li><a href="#53-%E5%A4%9A%E8%A1%8C%E4%BF%AE%E9%A5%B0%E7%AC%A6-multiline">5.3 多行修饰符（Multiline）</a></li></ul></li><li><a href="#%E9%A2%9D%E5%A4%96%E8%A1%A5%E5%85%85">额外补充</a></li><li><a href="#%E8%B4%A1%E7%8C%AE">贡献</a></li><li><a href="#%E8%AE%B8%E5%8F%AF%E8%AF%81">许可证</a></li></ul><h2 id="1-基本匹配"><a href="#1-基本匹配" class="headerlink" title="1. 基本匹配"></a>1. 基本匹配</h2><p>正则表达式其实就是在执行搜索时的格式，它由一些字母和数字组合而成。<br>例如：一个正则表达式 <code>the</code>，它表示一个规则：由字母<code>t</code>开始，接着是<code>h</code>，再接着是<code>e</code>。</p><pre>"the" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/dmRygT/1">在线练习</a></p><p>正则表达式<code>123</code>匹配字符串<code>123</code>。它逐个字符的与输入的正则表达式做比较。</p><p>正则表达式是大小写敏感的，所以<code>The</code>不会匹配<code>the</code>。</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/1paXsy/1">在线练习</a></p><h2 id="2-元字符"><a href="#2-元字符" class="headerlink" title="2. 元字符"></a>2. 元字符</h2><p>正则表达式主要依赖于元字符。<br>元字符不代表他们本身的字面意思，他们都有特殊的含义。一些元字符写在方括号中的时候有一些特殊的意思。以下是一些元字符的介绍：</p><table><thead><tr><th align="center">元字符</th><th>描述</th></tr></thead><tbody><tr><td align="center">.</td><td>句号匹配任意单个字符除了换行符。</td></tr><tr><td align="center">[ ]</td><td>字符种类。匹配方括号内的任意字符。</td></tr><tr><td align="center">[^ ]</td><td>否定的字符种类。匹配除了方括号里的任意字符</td></tr><tr><td align="center">*</td><td>匹配&gt;&#x3D;0个重复的在*号之前的字符。</td></tr><tr><td align="center">+</td><td>匹配&gt;&#x3D;1个重复的+号前的字符。</td></tr><tr><td align="center">?</td><td>标记?之前的字符为可选.</td></tr><tr><td align="center">{n,m}</td><td>匹配num个大括号之前的字符或字符集 (n &lt;&#x3D; num &lt;&#x3D; m).</td></tr><tr><td align="center">(xyz)</td><td>字符集，匹配与 xyz 完全相等的字符串.</td></tr><tr><td align="center">&amp;#124;</td><td>或运算符，匹配符号前或后的字符.</td></tr><tr><td align="center">&amp;#92;</td><td>转义字符,用于匹配一些保留的字符 <code>[ ] ( ) &#123; &#125; . * + ? ^ $ \ &#124;</code></td></tr><tr><td align="center">^</td><td>从开始行开始匹配.</td></tr><tr><td align="center">$</td><td>从末端开始匹配.</td></tr></tbody></table><h2 id="2-1-点运算符"><a href="#2-1-点运算符" class="headerlink" title="2.1 点运算符 ."></a>2.1 点运算符 <code>.</code></h2><p><code>.</code>是元字符中最简单的例子。<br><code>.</code>匹配任意单个字符，但不匹配换行符。<br>例如，表达式<code>.ar</code>匹配一个任意字符后面跟着是<code>a</code>和<code>r</code>的字符串。</p><pre>".ar" => The <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/xc9GkU/1">在线练习</a></p><h2 id="2-2-字符集"><a href="#2-2-字符集" class="headerlink" title="2.2 字符集"></a>2.2 字符集</h2><p>字符集也叫做字符类。<br>方括号用来指定一个字符集。<br>在方括号中使用连字符来指定字符集的范围。<br>在方括号中的字符集不关心顺序。<br>例如，表达式<code>[Tt]he</code> 匹配 <code>the</code> 和 <code>The</code>。</p><pre>"[Tt]he" => <a href="#learn-regex"><strong>The</strong></a> car parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/2ITLQ4/1">在线练习</a></p><p>方括号的句号就表示句号。<br>表达式 <code>ar[.]</code> 匹配 <code>ar.</code>字符串</p><pre>"ar[.]" => A garage is a good place to park a c<a href="#learn-regex"><strong>ar.</strong></a></pre><p><a href="https://regex101.com/r/wL3xtE/1">在线练习</a></p><h3 id="2-2-1-否定字符集"><a href="#2-2-1-否定字符集" class="headerlink" title="2.2.1 否定字符集"></a>2.2.1 否定字符集</h3><p>一般来说 <code>^</code> 表示一个字符串的开头，但它用在一个方括号的开头的时候，它表示这个字符集是否定的。<br>例如，表达式<code>[^c]ar</code> 匹配一个后面跟着<code>ar</code>的除了<code>c</code>的任意字符。</p><pre>"[^c]ar" => The car <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/nNNlq3/1">在线练习</a></p><h2 id="2-3-重复次数"><a href="#2-3-重复次数" class="headerlink" title="2.3 重复次数"></a>2.3 重复次数</h2><p>后面跟着元字符 <code>+</code>，<code>*</code> or <code>?</code> 的，用来指定匹配子模式的次数。<br>这些元字符在不同的情况下有着不同的意思。</p><h3 id="2-3-1-号"><a href="#2-3-1-号" class="headerlink" title="2.3.1 * 号"></a>2.3.1 <code>*</code> 号</h3><p><code>*</code>号匹配 在<code>*</code>之前的字符出现<code>大于等于0</code>次。<br>例如，表达式 <code>a*</code> 匹配0或更多个以a开头的字符。表达式<code>[a-z]*</code> 匹配一个行中所有以小写字母开头的字符串。</p><pre>"[a-z]*" => T<a href="#learn-regex"><strong>he</strong></a> <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>parked</strong></a> <a href="#learn-regex"><strong>in</strong></a> <a href="#learn-regex"><strong>the</strong></a> <a href="#learn-regex"><strong>garage</strong></a> #21.</pre><p><a href="https://regex101.com/r/7m8me5/1">在线练习</a></p><p><code>*</code>字符和<code>.</code>字符搭配可以匹配所有的字符<code>.*</code>。<br><code>*</code>和表示匹配空格的符号<code>\s</code>连起来用，如表达式<code>\s*cat\s*</code>匹配0或更多个空格开头和0或更多个空格结尾的cat字符串。</p><pre>"\s*cat\s*" => The fat<a href="#learn-regex"><strong> cat </strong></a>sat on the con<a href="#learn-regex"><strong>cat</strong></a>enation.</pre><p><a href="https://regex101.com/r/gGrwuz/1">在线练习</a></p><h3 id="2-3-2-号"><a href="#2-3-2-号" class="headerlink" title="2.3.2 + 号"></a>2.3.2 <code>+</code> 号</h3><p><code>+</code>号匹配<code>+</code>号之前的字符出现 &gt;&#x3D;1 次。<br>例如表达式<code>c.+t</code> 匹配以首字母<code>c</code>开头以<code>t</code>结尾，中间跟着至少一个字符的字符串。</p><pre>"c.+t" => The fat <a href="#learn-regex"><strong>cat sat on the mat</strong></a>.</pre><p><a href="https://regex101.com/r/Dzf9Aa/1">在线练习</a></p><h3 id="2-3-3-号"><a href="#2-3-3-号" class="headerlink" title="2.3.3 ? 号"></a>2.3.3 <code>?</code> 号</h3><p>在正则表达式中元字符 <code>?</code> 标记在符号前面的字符为可选，即出现 0 或 1 次。<br>例如，表达式 <code>[T]?he</code> 匹配字符串 <code>he</code> 和 <code>The</code>。</p><pre>"[T]he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><p><a href="https://regex101.com/r/cIg9zm/1">在线练习</a></p><pre>"[T]?he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in t<a href="#learn-regex"><strong>he</strong></a> garage.</pre><p><a href="https://regex101.com/r/kPpO2x/1">在线练习</a></p><h2 id="2-4-号"><a href="#2-4-号" class="headerlink" title="2.4 {} 号"></a>2.4 <code>&#123;&#125;</code> 号</h2><p>在正则表达式中 <code>&#123;&#125;</code> 是一个量词，常用来限定一个或一组字符可以重复出现的次数。<br>例如， 表达式 <code>[0-9]&#123;2,3&#125;</code> 匹配最少 2 位最多 3 位 0~9 的数字。</p><pre>"[0-9]{2,3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><p><a href="https://regex101.com/r/juM86s/1">在线练习</a></p><p>我们可以省略第二个参数。<br>例如，<code>[0-9]&#123;2,&#125;</code> 匹配至少两位 0~9 的数字。</p><pre>"[0-9]{2,}" => The number was 9.<a href="#learn-regex"><strong>9997</strong></a> but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><p><a href="https://regex101.com/r/Gdy4w5/1">在线练习</a></p><p>如果逗号也省略掉则表示重复固定的次数。<br>例如，<code>[0-9]&#123;3&#125;</code> 匹配3位数字</p><pre>"[0-9]{3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to 10.0.</pre><p><a href="https://regex101.com/r/Sivu30/1">在线练习</a></p><h2 id="2-5-特征标群"><a href="#2-5-特征标群" class="headerlink" title="2.5 (...) 特征标群"></a>2.5 <code>(...)</code> 特征标群</h2><p>特征标群是一组写在 <code>(...)</code> 中的子模式。<code>(...)</code> 中包含的内容将会被看成一个整体，和数学中小括号（ ）的作用相同。例如, 表达式 <code>(ab)*</code> 匹配连续出现 0 或更多个 <code>ab</code>。如果没有使用 <code>(...)</code> ，那么表达式 <code>ab*</code> 将匹配连续出现 0 或更多个 <code>b</code> 。再比如之前说的 <code>&#123;&#125;</code> 是用来表示前面一个字符出现指定次数。但如果在 <code>&#123;&#125;</code> 前加上特征标群 <code>(...)</code> 则表示整个标群内的字符重复 N 次。</p><p>我们还可以在 <code>()</code> 中用或字符 <code>|</code> 表示或。例如，<code>(c|g|p)ar</code> 匹配 <code>car</code> 或 <code>gar</code> 或 <code>par</code>.</p><pre>"(c|g|p)ar" => The <a href="#learn-regex"><strong>car</strong></a> is <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/tUxrBG/1">在线练习</a></p><h2 id="2-6-或运算符"><a href="#2-6-或运算符" class="headerlink" title="2.6 | 或运算符"></a>2.6 <code>|</code> 或运算符</h2><p>或运算符就表示或，用作判断条件。</p><p>例如 <code>(T|t)he|car</code> 匹配 <code>(T|t)he</code> 或 <code>car</code>。</p><pre>"(T|t)he|car" => <a href="#learn-regex"><strong>The</strong></a> <a href="#learn-regex"><strong>car</strong></a> is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/fBXyX0/1">在线练习</a></p><h2 id="2-7-转码特殊字符"><a href="#2-7-转码特殊字符" class="headerlink" title="2.7 转码特殊字符"></a>2.7 转码特殊字符</h2><p>反斜线 <code>\</code> 在表达式中用于转码紧跟其后的字符。用于指定 <code>&#123; &#125; [ ] / \ + * . $ ^ | ?</code> 这些特殊字符。如果想要匹配这些特殊字符则要在其前面加上反斜线 <code>\</code>。</p><p>例如 <code>.</code> 是用来匹配除换行符外的所有字符的。如果想要匹配句子中的 <code>.</code> 则要写成 <code>\.</code> 以下这个例子 <code>\.?</code>是选择性匹配<code>.</code></p><pre>"(f|c|m)at\.?" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> sat on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/DOc5Nu/1">在线练习</a></p><h2 id="2-8-锚点"><a href="#2-8-锚点" class="headerlink" title="2.8 锚点"></a>2.8 锚点</h2><p>在正则表达式中，想要匹配指定开头或结尾的字符串就要使用到锚点。<code>^</code> 指定开头，<code>$</code> 指定结尾。</p><h3 id="2-8-1-号"><a href="#2-8-1-号" class="headerlink" title="2.8.1 ^ 号"></a>2.8.1 <code>^</code> 号</h3><p><code>^</code> 用来检查匹配的字符串是否在所匹配字符串的开头。</p><p>例如，在 <code>abc</code> 中使用表达式 <code>^a</code> 会得到结果 <code>a</code>。但如果使用 <code>^b</code> 将匹配不到任何结果。因为在字符串 <code>abc</code> 中并不是以 <code>b</code> 开头。</p><p>例如，<code>^(T|t)he</code> 匹配以 <code>The</code> 或 <code>the</code> 开头的字符串。</p><pre>"(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/5ljjgB/1">在线练习</a></p><pre>"^(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><p><a href="https://regex101.com/r/jXrKne/1">在线练习</a></p><h3 id="2-8-2-号"><a href="#2-8-2-号" class="headerlink" title="2.8.2 $ 号"></a>2.8.2 <code>$</code> 号</h3><p>同理于 <code>^</code> 号，<code>$</code> 号用来匹配字符是否是最后一个。</p><p>例如，<code>(at\.)$</code> 匹配以 <code>at.</code> 结尾的字符串。</p><pre>"(at\.)" => The fat c<a href="#learn-regex"><strong>at.</strong></a> s<a href="#learn-regex"><strong>at.</strong></a> on the m<a href="#learn-regex"><strong>at.</strong></a></pre><p><a href="https://regex101.com/r/y4Au4D/1">在线练习</a></p><pre>"(at\.)$" => The fat cat. sat. on the m<a href="#learn-regex"><strong>at.</strong></a></pre><p><a href="https://regex101.com/r/t0AkOd/1">在线练习</a></p><h2 id="3-简写字符集"><a href="#3-简写字符集" class="headerlink" title="3. 简写字符集"></a>3. 简写字符集</h2><p>正则表达式提供一些常用的字符集简写。如下:</p><table><thead><tr><th align="center">简写</th><th>描述</th></tr></thead><tbody><tr><td align="center">.</td><td>除换行符外的所有字符</td></tr><tr><td align="center">\w</td><td>匹配所有字母数字，等同于 <code>[a-zA-Z0-9_]</code></td></tr><tr><td align="center">\W</td><td>匹配所有非字母数字，即符号，等同于： <code>[^\w]</code></td></tr><tr><td align="center">\d</td><td>匹配数字： <code>[0-9]</code></td></tr><tr><td align="center">\D</td><td>匹配非数字： <code>[^\d]</code></td></tr><tr><td align="center">\s</td><td>匹配所有空格字符，等同于： <code>[\t\n\f\r\p&#123;Z&#125;]</code></td></tr><tr><td align="center">\S</td><td>匹配所有非空格字符： <code>[^\s]</code></td></tr><tr><td align="center">\f</td><td>匹配一个换页符</td></tr><tr><td align="center">\n</td><td>匹配一个换行符</td></tr><tr><td align="center">\r</td><td>匹配一个回车符</td></tr><tr><td align="center">\t</td><td>匹配一个制表符</td></tr><tr><td align="center">\v</td><td>匹配一个垂直制表符</td></tr><tr><td align="center">\p</td><td>匹配 CR&#x2F;LF（等同于 <code>\r\n</code>），用来匹配 DOS 行终止符</td></tr></tbody></table><h2 id="4-零宽度断言（前后预查）"><a href="#4-零宽度断言（前后预查）" class="headerlink" title="4. 零宽度断言（前后预查）"></a>4. 零宽度断言（前后预查）</h2><p>先行断言和后发断言（合称 lookaround）都属于<strong>非捕获组</strong>（用于匹配模式，但不包括在匹配列表中）。当我们需要一个模式的前面或后面有另一个特定的模式时，就可以使用它们。</p><p>例如，我们希望从下面的输入字符串 <code>$4.44</code> 和 <code>$10.88</code> 中获得所有以 <code>$</code> 字符开头的数字，我们将使用以下的正则表达式 <code>(?&lt;=\$)[0-9\.]*</code>。意思是：获取所有包含 <code>.</code> 并且前面是 <code>$</code> 的数字。</p><p>零宽度断言如下：</p><table><thead><tr><th align="center">符号</th><th>描述</th></tr></thead><tbody><tr><td align="center">?&#x3D;</td><td>正先行断言-存在</td></tr><tr><td align="center">?!</td><td>负先行断言-排除</td></tr><tr><td align="center">?&lt;&#x3D;</td><td>正后发断言-存在</td></tr><tr><td align="center">?&lt;!</td><td>负后发断言-排除</td></tr></tbody></table><h3 id="4-1-正先行断言"><a href="#4-1-正先行断言" class="headerlink" title="4.1 ?=... 正先行断言"></a>4.1 <code>?=...</code> 正先行断言</h3><p><code>?=...</code> 正先行断言，表示第一部分表达式之后必须跟着 <code>?=...</code>定义的表达式。</p><p>返回结果只包含满足匹配条件的第一部分表达式。<br>定义一个正先行断言要使用 <code>()</code>。在括号内部使用一个问号和等号： <code>(?=...)</code>。</p><p>正先行断言的内容写在括号中的等号后面。<br>例如，表达式 <code>(T|t)he(?=\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>，在括号中我们又定义了正先行断言 <code>(?=\sfat)</code> ，即 <code>The</code> 和 <code>the</code> 后面紧跟着 <code>(空格)fat</code>。</p><pre>"(T|t)he(?=\sfat)" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/IDDARt/1">在线练习</a></p><h3 id="4-2-负先行断言"><a href="#4-2-负先行断言" class="headerlink" title="4.2 ?!... 负先行断言"></a>4.2 <code>?!...</code> 负先行断言</h3><p>负先行断言 <code>?!</code> 用于筛选所有匹配结果，筛选条件为 其后不跟随着断言中定义的格式。<br><code>正先行断言</code>  定义和 <code>负先行断言</code> 一样，区别就是 <code>=</code> 替换成 <code>!</code> 也就是 <code>(?!...)</code>。</p><p>表达式 <code>(T|t)he(?!\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>，且其后不跟着 <code>(空格)fat</code>。</p><pre>"(T|t)he(?!\sfat)" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/V32Npg/1">在线练习</a></p><h3 id="4-3-lt-正后发断言"><a href="#4-3-lt-正后发断言" class="headerlink" title="4.3 ?&lt;= ... 正后发断言"></a>4.3 <code>?&lt;= ...</code> 正后发断言</h3><p>正后发断言 记作<code>(?&lt;=...)</code> 用于筛选所有匹配结果，筛选条件为 其前跟随着断言中定义的格式。<br>例如，表达式 <code>(?&lt;=(T|t)he\s)(fat|mat)</code> 匹配 <code>fat</code> 和 <code>mat</code>，且其前跟着 <code>The</code> 或 <code>the</code>。</p><pre>"(?<=(T|t)he\s)(fat|mat)" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the <a href="#learn-regex"><strong>mat</strong></a>.</=(T|t)he\s)(fat|mat)"></pre><p><a href="https://regex101.com/r/avH165/1">在线练习</a></p><h3 id="4-4-lt-负后发断言"><a href="#4-4-lt-负后发断言" class="headerlink" title="4.4 ?&lt;!... 负后发断言"></a>4.4 <code>?&lt;!...</code> 负后发断言</h3><p>负后发断言 记作 <code>(?&lt;!...)</code> 用于筛选所有匹配结果，筛选条件为 其前不跟随着断言中定义的格式。<br>例如，表达式 <code>(?&lt;!(T|t)he\s)(cat)</code> 匹配 <code>cat</code>，且其前不跟着 <code>The</code> 或 <code>the</code>。</p><pre>"(?&lt;!(T|t)he\s)(cat)" => The cat sat on <a href="#learn-regex"><strong>cat</strong></a>.</pre><p><a href="https://regex101.com/r/8Efx5G/1">在线练习</a></p><h2 id="5-标志"><a href="#5-标志" class="headerlink" title="5. 标志"></a>5. 标志</h2><p>标志也叫模式修正符，因为它可以用来修改表达式的搜索结果。<br>这些标志可以任意的组合使用，它也是整个正则表达式的一部分。</p><table><thead><tr><th align="center">标志</th><th>描述</th></tr></thead><tbody><tr><td align="center">i</td><td>忽略大小写。</td></tr><tr><td align="center">g</td><td>全局搜索。</td></tr><tr><td align="center">m</td><td>多行修饰符：锚点元字符 <code>^</code> <code>$</code> 工作范围在每行的起始。</td></tr></tbody></table><h3 id="5-1-忽略大小写-Case-Insensitive"><a href="#5-1-忽略大小写-Case-Insensitive" class="headerlink" title="5.1 忽略大小写 (Case Insensitive)"></a>5.1 忽略大小写 (Case Insensitive)</h3><p>修饰语 <code>i</code> 用于忽略大小写。<br>例如，表达式 <code>/The/gi</code> 表示在全局搜索 <code>The</code>，在后面的 <code>i</code> 将其条件修改为忽略大小写，则变成搜索 <code>the</code> 和 <code>The</code>，<code>g</code> 表示全局搜索。</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/dpQyf9/1">在线练习</a></p><pre>"/The/gi" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/ahfiuh/1">在线练习</a></p><h3 id="5-2-全局搜索-Global-search"><a href="#5-2-全局搜索-Global-search" class="headerlink" title="5.2 全局搜索 (Global search)"></a>5.2 全局搜索 (Global search)</h3><p>修饰符 <code>g</code> 常用于执行一个全局搜索匹配，即（不仅仅返回第一个匹配的，而是返回全部）。<br>例如，表达式 <code>/.(at)/g</code> 表示搜索 任意字符（除了换行）+ <code>at</code>，并返回全部结果。</p><pre>"/.(at)/" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the mat.</pre><p><a href="https://regex101.com/r/jnk6gM/1">在线练习</a></p><pre>"/.(at)/g" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> <a href="#learn-regex"><strong>sat</strong></a> on the <a href="#learn-regex"><strong>mat</strong></a>.</pre><p><a href="https://regex101.com/r/dO1nef/1">在线练习</a></p><h3 id="5-3-多行修饰符-Multiline"><a href="#5-3-多行修饰符-Multiline" class="headerlink" title="5.3 多行修饰符 (Multiline)"></a>5.3 多行修饰符 (Multiline)</h3><p>多行修饰符 <code>m</code> 常用于执行一个多行匹配。</p><p>像之前介绍的 <code>(^,$)</code> 用于检查格式是否是在待检测字符串的开头或结尾。但我们如果想要它在每行的开头和结尾生效，我们需要用到多行修饰符 <code>m</code>。</p><p>例如，表达式 <code>/at(.)?$/gm</code> 表示小写字符 <code>a</code> 后跟小写字符 <code>t</code> ，末尾可选除换行符外任意字符。根据 <code>m</code> 修饰符，现在表达式匹配每行的结尾。</p><pre>"/.at(.)?$/" => The fat                cat sat                on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/hoGMkP/1">在线练习</a></p><pre>"/.at(.)?$/gm" => The <a href="#learn-regex"><strong>fat</strong></a>                  cat <a href="#learn-regex"><strong>sat</strong></a>                  on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/E88WE2/1">在线练习</a></p><h3 id="6-贪婪匹配与惰性匹配-Greedy-vs-lazy-matching"><a href="#6-贪婪匹配与惰性匹配-Greedy-vs-lazy-matching" class="headerlink" title="6. 贪婪匹配与惰性匹配 (Greedy vs lazy matching)"></a>6. 贪婪匹配与惰性匹配 (Greedy vs lazy matching)</h3><p>正则表达式默认采用贪婪匹配模式，在该模式下意味着会匹配尽可能长的子串。我们可以使用 <code>?</code> 将贪婪匹配模式转化为惰性匹配模式。</p><pre>"/(.*at)/" => <a href="#learn-regex"><strong>The fat cat sat on the mat</strong></a>. </pre><p><a href="https://regex101.com/r/AyAdgJ/1">在线练习</a></p><pre>"/(.*?at)/" => <a href="#learn-regex"><strong>The fat</strong></a> cat sat on the mat. </pre><p><a href="https://regex101.com/r/AyAdgJ/2">在线练习</a></p><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><ul><li>报告问题</li><li>开放合并请求</li><li>传播此文档</li><li>直接和我联系 <a href="mailto:&#x7a;&#x69;&#105;&#x73;&#104;&#97;&#110;&#101;&#x64;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;">&#x7a;&#x69;&#105;&#x73;&#104;&#97;&#110;&#101;&#x64;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a> 或 <a href="https://twitter.com/ziishaned"><img src="https://img.shields.io/twitter/url/https/twitter.com/ziishaned.svg?style=social&label=Follow%20@ziishaned" alt="Twitter URL"></a></li></ul><h2 id="许可证"><a href="#许可证" class="headerlink" title="许可证"></a>许可证</h2><p>MIT &amp;copy; <a href="https://twitter.com/ziishaned">Zeeshan Ahmad</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是正则表达式？&quot;&gt;&lt;a href=&quot;#什么是正则表达式？&quot; class=&quot;headerlink&quot; title=&quot;什么是正则表达式？&quot;&gt;&lt;/a&gt;什么是正则表达式？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>NOIP2003 提高组 加分二叉树</title>
    <link href="http://zhang2514yuchi.github.io/2022/03/14/NOIP2003-%E6%8F%90%E9%AB%98%E7%BB%84-%E5%8A%A0%E5%88%86%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://zhang2514yuchi.github.io/2022/03/14/NOIP2003-%E6%8F%90%E9%AB%98%E7%BB%84-%E5%8A%A0%E5%88%86%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2022-03-14T11:31:45.000Z</published>
    <updated>2022-03-14T11:34:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>区间dp</p><p>重点关注路径标记</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P1040">P1040</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[Max],dp[Max][Max],lt[Max],rt[Max],d[Max][Max],vis[Max];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;r)<span class="keyword">return</span>;</span><br><span class="line">cout&lt;&lt;d[l][r]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (l == r)<span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">print</span>(l, d[l][r] - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">print</span>(d[l][r]+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">dp[i][i]=a[i];</span><br><span class="line">d[i][i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> s=<span class="number">1</span>;s&lt;=n-l+<span class="number">1</span>;s++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t=s+l<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(dp[s][t<span class="number">-1</span>]+dp[t][t]&gt;dp[s][t])</span><br><span class="line">&#123;</span><br><span class="line">dp[s][t]=dp[s][t<span class="number">-1</span>]+dp[t][t];</span><br><span class="line">d[s][t]=t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(dp[s][s]+dp[s+<span class="number">1</span>][t]&gt;dp[s][t])</span><br><span class="line">&#123;</span><br><span class="line">dp[s][t]=dp[s][s]+dp[s+<span class="number">1</span>][t];</span><br><span class="line">d[s][t]=s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=s+<span class="number">1</span>;k&lt;=t<span class="number">-1</span>;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dp[s][k<span class="number">-1</span>]*dp[k+<span class="number">1</span>][t]+a[k]&gt;dp[s][t])</span><br><span class="line">&#123;</span><br><span class="line">dp[s][t]=dp[s][k<span class="number">-1</span>]*dp[k+<span class="number">1</span>][t]+a[k];</span><br><span class="line">d[s][t]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[<span class="number">1</span>][n]&lt;&lt;endl;</span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;区间dp&lt;/p&gt;
&lt;p&gt;重点关注路径标记&lt;/p&gt;</summary>
    
    
    
    
    <category term="dp" scheme="http://zhang2514yuchi.github.io/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>高精模版小结</title>
    <link href="http://zhang2514yuchi.github.io/2022/03/14/%E9%AB%98%E7%B2%BE/"/>
    <id>http://zhang2514yuchi.github.io/2022/03/14/%E9%AB%98%E7%B2%BE/</id>
    <published>2022-03-14T09:39:14.000Z</published>
    <updated>2022-03-14T11:36:08.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="总结一下常用高精度"><a href="#总结一下常用高精度" class="headerlink" title="总结一下常用高精度"></a>总结一下常用高精度</h4><ol><li>$高精+高精$</li><li>$高精\times单精$</li><li>$\max(高精,高精)$</li></ol><span id="more"></span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">HP</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> p[<span class="number">505</span>],len;</span><br><span class="line"><span class="built_in">HP</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(p,<span class="number">0</span>,<span class="built_in">sizeof</span>(p));</span><br><span class="line">len=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;p[len];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]==<span class="number">0</span>) &#123;cout&lt;&lt;<span class="string">&quot;0000&quot;</span>;<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">10</span>;j*p[i]&lt;M;j*=<span class="number">10</span>) cout&lt;&lt;<span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout&lt;&lt;p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;dp[Max][Max],b[<span class="number">110</span>],res;</span><br><span class="line"></span><br><span class="line">HP <span class="keyword">operator</span> + (<span class="type">const</span> HP &amp;a,<span class="type">const</span> HP &amp;b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>;</span><br><span class="line">HP c;</span><br><span class="line"><span class="keyword">if</span>(a.len&gt;b.len) c.len=a.len;</span><br><span class="line"><span class="keyword">else</span> c.len=b.len;</span><br><span class="line"><span class="comment">// c.len=max(a.len,b.len);</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=c.len;i++)</span><br><span class="line">&#123;</span><br><span class="line">c.p[i]=a.p[i]+b.p[i]+x;</span><br><span class="line">x=c.p[i]/M;</span><br><span class="line">c.p[i]%=M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">0</span>) c.p[++c.len]=x;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HP <span class="keyword">operator</span> * (<span class="type">const</span> HP &amp;a,<span class="type">const</span> <span class="type">int</span> &amp;b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>;</span><br><span class="line">HP c;</span><br><span class="line">c.len=a.len;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=c.len;i++)</span><br><span class="line">&#123;</span><br><span class="line">c.p[i]=a.p[i]*b+x;</span><br><span class="line">x=c.p[i]/M;</span><br><span class="line">c.p[i]%=M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">0</span>) c.p[++c.len]=x;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">HP <span class="title">max</span><span class="params">(<span class="type">const</span> HP &amp;a,<span class="type">const</span> HP &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.len&gt;b.len)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a.len&lt;b.len)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=a.len;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a.p[i]&gt;b.p[i]) <span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a.p[i]&lt;b.p[i]) <span class="keyword">return</span> b;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;总结一下常用高精度&quot;&gt;&lt;a href=&quot;#总结一下常用高精度&quot; class=&quot;headerlink&quot; title=&quot;总结一下常用高精度&quot;&gt;&lt;/a&gt;总结一下常用高精度&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;$高精+高精$&lt;/li&gt;
&lt;li&gt;$高精\times单精$&lt;/li&gt;
&lt;li&gt;$\max(高精,高精)$&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="高精度" scheme="http://zhang2514yuchi.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>线代复习-3-矩阵的基本概念与运算</title>
    <link href="http://zhang2514yuchi.github.io/2022/03/13/%E7%BA%BF%E4%BB%A33/"/>
    <id>http://zhang2514yuchi.github.io/2022/03/13/%E7%BA%BF%E4%BB%A33/</id>
    <published>2022-03-13T12:54:31.000Z</published>
    <updated>2022-03-14T03:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>矩阵的基本概念与运算</p><span id="more"></span><p>1.$AB&#x3D;BC,A\ne0 \Rightarrow A(B-C)&#x3D;0$</p><p>​                                $ \nRightarrow B&#x3D;C$</p><p>2.方阵乘积的行列式</p><p>​    设$A,B$是同阶方阵，则$|AB|&#x3D;|A||B|.$</p><p>3.逆矩阵的性质</p><p>​    设$A,B$是同阶可逆矩阵，则</p><p>​    (1) $AB$也可逆，且$(AB)^{-1}&#x3D;B^{-1}A^{-1}$</p><p>​    (2)$A^T$也可逆，且$(A^T)^{-1}&#x3D;(A^{-1})^T$</p><p>4.分块矩阵的逆，若$A,B$均是可逆方针，则：</p><img src="/.io//03/13/%E7%BA%BF%E4%BB%A33/11.png" class><p>5.求方阵的幂</p><p>(1)通过直接或者拆成–&gt;列$\times$行 ，来凑前后两项为常数或单位矩阵</p><p>(2)算出前几次幂（2或3）可能会出现周期或者常数</p><p>(3)拆成$A+E$的形式，然后根据二项式定理展开</p><p>6.*[错题本]</p><p>$A,B$是n阶方阵，满足$AB&#x3D;A-B$，证明：$AB&#x3D;BA.$</p><p>7.*[错题本]</p><p>证明充分必要条件时，分两步：充分性和必要性</p><p>8.若$E+A$是可逆矩阵，则有$(E-A)(E+A)^{-1}&#x3D;(E+A)^{-1}(E-A)$</p><p>即$(E+A)^{-1}$和$(E-A)$可交换</p><p>9.*[错题本]</p><p>设</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;矩阵的基本概念与运算&lt;/p&gt;</summary>
    
    
    
    
    <category term="线性代数" scheme="http://zhang2514yuchi.github.io/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>P1156</title>
    <link href="http://zhang2514yuchi.github.io/2022/03/10/P1156/"/>
    <id>http://zhang2514yuchi.github.io/2022/03/10/P1156/</id>
    <published>2022-03-10T03:32:52.000Z</published>
    <updated>2022-03-10T03:45:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>一道背包问题</p><span id="more"></span><p>一开始想的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(j+x&lt;=<span class="number">10010</span>) </span><br><span class="line">  dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j+x]+a[i].h);</span><br><span class="line"><span class="keyword">if</span>(j-a[i].f+x&gt;=<span class="number">0</span> &amp;&amp; j-a[i].f+x&lt;=<span class="number">10010</span>) </span><br><span class="line">  dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j-a[i].f+x]);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e8</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> d,g;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t,f,h;</span><br><span class="line">&#125;a[Max];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">201</span>][<span class="number">10011</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.t&lt;b.t;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>,ans=<span class="number">10</span>;</span><br><span class="line">cin&gt;&gt;d&gt;&gt;g;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i].t&gt;&gt;a[i].f&gt;&gt;a[i].h;</span><br><span class="line">n=<span class="built_in">max</span>(n,a[i].t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+g,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">200</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">10010</span>;j++) dp[i][j]=-inf;</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">10</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=a[i].t-a[i<span class="number">-1</span>].t;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">10010</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j+x&lt;=<span class="number">10010</span>) dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j+x]+a[i].h);</span><br><span class="line"><span class="keyword">if</span>(j-a[i].f+x&gt;=<span class="number">0</span> &amp;&amp; j-a[i].f+x&lt;=<span class="number">10010</span>) dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j-a[i].f+x]);</span><br><span class="line"><span class="keyword">if</span>(dp[i][j]&gt;=d) </span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;a[i].t&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ans&lt;a[i].t) <span class="keyword">break</span>;</span><br><span class="line">ans+=a[i].f;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看了下别人的类似思路</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(j-x&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">dp[i][j-x]=<span class="built_in">max</span>(dp[i][j-x],dp[i<span class="number">-1</span>][j]+a[i].h);</span><br><span class="line"><span class="keyword">if</span>(dp[i][j-x]&gt;=d)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;a[i].t&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j-x+a[i].f&lt;=<span class="number">10010</span>)</span><br><span class="line">&#123;</span><br><span class="line">  dp[i][j-x+a[i].f]=<span class="built_in">max</span>(dp[i][j-x+a[i].f],dp[i<span class="number">-1</span>][j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e8</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> d,g;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t,f,h;</span><br><span class="line">&#125;a[Max];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">201</span>][<span class="number">10011</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.t&lt;b.t;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>,ans=<span class="number">10</span>;</span><br><span class="line">cin&gt;&gt;d&gt;&gt;g;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i].t&gt;&gt;a[i].f&gt;&gt;a[i].h;</span><br><span class="line">n=<span class="built_in">max</span>(n,a[i].t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+g,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">200</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">10010</span>;j++) dp[i][j]=-inf;</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">10</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=a[i].t-a[i<span class="number">-1</span>].t;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">10010</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(j-x&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"> dp[i][j-x]=<span class="built_in">max</span>(dp[i][j-x],dp[i<span class="number">-1</span>][j]+a[i].h);</span><br><span class="line"> <span class="keyword">if</span>(dp[i][j-x]&gt;=d)</span><br><span class="line"> &#123;</span><br><span class="line"> cout&lt;&lt;a[i].t&lt;&lt;endl;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(j-x+a[i].f&lt;=<span class="number">10010</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> dp[i][j-x+a[i].f]=<span class="built_in">max</span>(dp[i][j-x+a[i].f],dp[i<span class="number">-1</span>][j]);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ans&lt;a[i].t) <span class="keyword">break</span>;</span><br><span class="line">ans+=a[i].f;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在我的思路基础上只多加了一个限制条件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(j+x&lt;=<span class="number">10010</span>) </span><br><span class="line">  dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j+x]+a[i].h);</span><br><span class="line"><span class="keyword">if</span>(j-a[i].f+x&gt;=<span class="number">0</span> &amp;&amp; j-a[i].f+x&lt;=<span class="number">10010</span> &amp;&amp; j-a[i].f&gt;=<span class="number">0</span>) </span><br><span class="line">  dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j-a[i].f+x]);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e8</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> d,g;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t,f,h;</span><br><span class="line">&#125;a[Max];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">201</span>][<span class="number">10011</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.t&lt;b.t;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>,ans=<span class="number">10</span>;</span><br><span class="line">cin&gt;&gt;d&gt;&gt;g;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i].t&gt;&gt;a[i].f&gt;&gt;a[i].h;</span><br><span class="line">n=<span class="built_in">max</span>(n,a[i].t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+g,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">200</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">10010</span>;j++) dp[i][j]=-inf;</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">10</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=a[i].t-a[i<span class="number">-1</span>].t;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">10010</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j+x&lt;=<span class="number">10010</span>) dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j+x]+a[i].h);</span><br><span class="line"><span class="keyword">if</span>(j-a[i].f+x&gt;=<span class="number">0</span> &amp;&amp; j-a[i].f+x&lt;=<span class="number">10010</span> &amp;&amp; j-a[i].f&gt;=<span class="number">0</span>) dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j-a[i].f+x]);</span><br><span class="line"><span class="keyword">if</span>(dp[i][j]&gt;=d) </span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;a[i].t&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=g;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ans&lt;a[i].t) <span class="keyword">break</span>;</span><br><span class="line">ans+=a[i].f;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没想清楚限制条件，呜呜</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一道背包问题&lt;/p&gt;</summary>
    
    
    
    
    <category term="dp" scheme="http://zhang2514yuchi.github.io/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>CSP-202012 刷题记录</title>
    <link href="http://zhang2514yuchi.github.io/2022/03/07/csp202012/"/>
    <id>http://zhang2514yuchi.github.io/2022/03/07/csp202012/</id>
    <published>2022-03-07T09:17:44.000Z</published>
    <updated>2022-03-10T04:12:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>总得分：405</p><span id="more"></span><h1 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h1><p>得分：80</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">4e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> tr[Max];</span><br><span class="line"><span class="type">int</span> siz[Max];</span><br><span class="line"><span class="type">int</span> pre[Max];<span class="comment">//tr==1代表是文件</span></span><br><span class="line"><span class="type">int</span> cnt=<span class="number">0</span>,fl=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mulusiz,houdaisiz;</span><br><span class="line"><span class="type">int</span> nowmulu,nowhoudai;</span><br><span class="line">set&lt;string&gt;st;</span><br><span class="line">map&lt;string,<span class="type">int</span>&gt;mp;</span><br><span class="line">&#125;ml[Max];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">read1</span><span class="params">(string x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> len=x.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x[i]==<span class="string">&#x27;/&#x27;</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(string x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> len=x.<span class="built_in">length</span>();</span><br><span class="line"><span class="type">int</span> p=<span class="built_in">read1</span>(x);</span><br><span class="line">string s1,s2;</span><br><span class="line"><span class="keyword">if</span>(p==len<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;p+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">s1=s1+x[i];</span><br><span class="line">&#125;</span><br><span class="line">s2=<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;p;i++)</span><br><span class="line">&#123;</span><br><span class="line">s1=s1+x[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=p;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">s2=s2+x[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//y是当前目录，s1是当前要访问的东西</span></span><br><span class="line"><span class="keyword">if</span>(ml[y].st.<span class="built_in">find</span>(s1)!=ml[y].st.<span class="built_in">end</span>())<span class="comment">//找到</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> now=ml[y].mp[s1];</span><br><span class="line"><span class="keyword">if</span>(s2==<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tr[now])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> z1=z-siz[now];</span><br><span class="line"><span class="keyword">if</span>(ml[y].mulusiz-ml[y].nowmulu&gt;=z1 &amp;&amp; ml[y].houdaisiz-ml[y].nowhoudai&gt;=z1)</span><br><span class="line">&#123;</span><br><span class="line">++cnt;</span><br><span class="line">ml[y].mp[s1]=cnt;</span><br><span class="line">tr[cnt]=<span class="number">1</span>;</span><br><span class="line">siz[cnt]=z;</span><br><span class="line">ml[y].nowmulu+=z1;</span><br><span class="line"><span class="type">int</span> k=y;</span><br><span class="line"><span class="keyword">while</span>(k!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ml[k].nowhoudai+=z1;</span><br><span class="line">k=pre[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tr[now])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>( ml[y].houdaisiz-ml[y].nowhoudai&gt;=z)</span><br><span class="line"> &#123;</span><br><span class="line"> pre[now]=y;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">check</span>(s2,now,z);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s2==<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ml[y].mulusiz-ml[y].nowmulu&gt;=z &amp;&amp; ml[y].houdaisiz-ml[y].nowhoudai&gt;=z)</span><br><span class="line">&#123;</span><br><span class="line">++cnt;</span><br><span class="line">ml[y].st.<span class="built_in">insert</span>(s1);</span><br><span class="line">ml[y].mp[s1]=cnt;</span><br><span class="line">tr[cnt]=<span class="number">1</span>;</span><br><span class="line">siz[cnt]=z;</span><br><span class="line">ml[y].nowmulu+=z;</span><br><span class="line"><span class="type">int</span> k=y;</span><br><span class="line"><span class="keyword">while</span>(k!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ml[k].nowhoudai+=z;</span><br><span class="line">k=pre[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( ml[y].houdaisiz-ml[y].nowhoudai&gt;=z)</span><br><span class="line">&#123;</span><br><span class="line">++cnt;</span><br><span class="line">ml[y].st.<span class="built_in">insert</span>(s1);</span><br><span class="line">ml[y].mp[s1]=cnt;</span><br><span class="line">tr[cnt]=<span class="number">0</span>;</span><br><span class="line">ml[cnt].houdaisiz=<span class="number">2e18</span>;</span><br><span class="line">ml[cnt].mulusiz=<span class="number">2e18</span>;</span><br><span class="line">ml[cnt].nowhoudai=<span class="number">0</span>;</span><br><span class="line">ml[cnt].nowmulu=<span class="number">0</span>;</span><br><span class="line">pre[cnt]=y;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">check</span>(s2,cnt,z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">shanchu</span><span class="params">(string x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> len=x.<span class="built_in">length</span>();</span><br><span class="line"><span class="type">int</span> p=<span class="built_in">read1</span>(x);</span><br><span class="line">string s1,s2;</span><br><span class="line"><span class="keyword">if</span>(p==len<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;p+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">s1=s1+x[i];</span><br><span class="line">&#125;</span><br><span class="line">s2=<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;p;i++)</span><br><span class="line">&#123;</span><br><span class="line">s1=s1+x[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=p;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">s2=s2+x[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ml[y].st.<span class="built_in">find</span>(s1)!=ml[y].st.<span class="built_in">end</span>())<span class="comment">//找到了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s2==<span class="string">&quot;&quot;</span>)<span class="comment">//叶子</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tr[ml[y].mp[s1]])<span class="comment">//文件</span></span><br><span class="line">&#123;</span><br><span class="line">ml[y].st.<span class="built_in">erase</span>(s1);</span><br><span class="line"><span class="type">int</span> k=siz[ml[y].mp[s1]];</span><br><span class="line">ml[y].mp[s1]=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i=y;</span><br><span class="line">ml[y].nowmulu-=k;</span><br><span class="line"><span class="keyword">while</span>(i!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ml[i].nowhoudai-=k;</span><br><span class="line">i=pre[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ml[y].st.<span class="built_in">erase</span>(s1);</span><br><span class="line"><span class="type">int</span> k=ml[ml[y].mp[s1]].nowhoudai;</span><br><span class="line">ml[y].mp[s1]=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i=y;</span><br><span class="line"><span class="keyword">while</span>(i!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ml[i].nowhoudai-=k;</span><br><span class="line">i=pre[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tr[ml[y].mp[s1]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">pre[ml[y].mp[s1]]=y;</span><br><span class="line"><span class="built_in">shanchu</span>(s2,ml[y].mp[s1]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">shezhi</span><span class="params">(string x,<span class="type">int</span> y,<span class="type">int</span> ld,<span class="type">int</span> lr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="string">&quot;/&quot;</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ml[<span class="number">0</span>].nowmulu&gt;ld||ml[<span class="number">0</span>].nowhoudai&gt;lr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ml[<span class="number">0</span>].mulusiz=ld;</span><br><span class="line">ml[<span class="number">0</span>].houdaisiz=lr;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> len=x.<span class="built_in">length</span>();</span><br><span class="line"><span class="type">int</span> p=<span class="built_in">read1</span>(x);</span><br><span class="line">string s1,s2;</span><br><span class="line"><span class="keyword">if</span>(p==len<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;p+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">s1=s1+x[i];</span><br><span class="line">&#125;</span><br><span class="line">s2=<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;p;i++)</span><br><span class="line">&#123;</span><br><span class="line">s1=s1+x[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=p;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">s2=s2+x[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ml[y].st.<span class="built_in">find</span>(s1)!=ml[y].st.<span class="built_in">end</span>())<span class="comment">//找到了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s2==<span class="string">&quot;&quot;</span>)<span class="comment">//叶子</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tr[ml[y].mp[s1]])<span class="comment">//文件</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ml[ml[y].mp[s1]].nowmulu&gt;ld||ml[ml[y].mp[s1]].nowhoudai&gt;lr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ml[ml[y].mp[s1]].mulusiz=ld;</span><br><span class="line">ml[ml[y].mp[s1]].houdaisiz=lr;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tr[ml[y].mp[s1]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">shezhi</span>(s2,ml[y].mp[s1],ld,lr);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">// freopen(&quot;out.txt&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">ml[<span class="number">0</span>].mulusiz=<span class="number">2e18</span>;</span><br><span class="line">ml[<span class="number">0</span>].houdaisiz=<span class="number">2e18</span>;</span><br><span class="line">ml[<span class="number">0</span>].nowhoudai=<span class="number">0</span>;</span><br><span class="line">ml[<span class="number">0</span>].nowmulu=<span class="number">0</span>;</span><br><span class="line">pre[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line">string s1;</span><br><span class="line">c=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">&#x27;A&#x27;</span>||c&gt;<span class="string">&#x27;Z&#x27;</span>) c=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> g;</span><br><span class="line">cin&gt;&gt;s1&gt;&gt;g;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(s1,<span class="number">0</span>,g))</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Y\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;N\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;s1;</span><br><span class="line">fl=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">shanchu</span>(s1,<span class="number">0</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Y\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;Q&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ld,lr;</span><br><span class="line">cin&gt;&gt;s1&gt;&gt;ld&gt;&gt;lr;</span><br><span class="line"><span class="keyword">if</span>(ld==<span class="number">0</span>) ld=<span class="number">2e18</span>;</span><br><span class="line"><span class="keyword">if</span>(lr==<span class="number">0</span>) lr=<span class="number">2e18</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">shezhi</span>(s1,<span class="number">0</span>,ld,lr))</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Y\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;N\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h1><p>得分：65</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,k;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b[<span class="number">110</span>][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt=<span class="number">0</span>,h[<span class="number">1000</span>],ans=<span class="number">0</span>,mx=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> to,nxt,l;</span><br><span class="line">&#125;e[<span class="number">2000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v,<span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[++cnt].to=v;</span><br><span class="line">e[cnt].nxt=h[u];</span><br><span class="line">e[cnt].l=w;</span><br><span class="line">h[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa,<span class="type">int</span> k,<span class="type">int</span> dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tr=b[u][k];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=h[u];i;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> v=e[i].to;</span><br><span class="line"><span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">dfs</span>(v,u,k,dep+e[i].l))</span><br><span class="line">&#123;</span><br><span class="line">tr=<span class="number">1</span>;</span><br><span class="line">ans+=e[i].l*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tr) </span><br><span class="line">&#123;</span><br><span class="line">mx=<span class="built_in">max</span>(mx,dep);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=k;j++) cin&gt;&gt;b[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> u,v,w;</span><br><span class="line">cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</span><br><span class="line"><span class="built_in">add</span>(u,v,w);</span><br><span class="line"><span class="built_in">add</span>(v,u,w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> tmp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> res=inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">ans=<span class="number">0</span>,mx=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">dfs</span>(j,<span class="number">0</span>,i,<span class="number">0</span>);</span><br><span class="line">res=<span class="built_in">min</span>(res,ans-mx);</span><br><span class="line">&#125;</span><br><span class="line">tmp=<span class="built_in">max</span>(tmp,res);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;tmp;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h1><p>得分：60</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mid ((s+t)&gt;&gt;1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls (p&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs ((p&lt;&lt;1)|1)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line">&#125;d[Max*<span class="number">4</span>],b[Max*<span class="number">4</span>],a[Max],b1[Max*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> k1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k1==<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">d[p].x=(d[p].x+k%M*(t-s+<span class="number">1</span>)%M)%M;</span><br><span class="line">b[p].x=(b[p].x+k%M)%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k1==<span class="number">2</span>) </span><br><span class="line">&#123;</span><br><span class="line">d[p].y=(d[p].y+k%M*(t-s+<span class="number">1</span>)%M)%M;</span><br><span class="line">b[p].y=(b[p].y+k%M)%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k1==<span class="number">3</span>) </span><br><span class="line">&#123;</span><br><span class="line">d[p].z=(d[p].z+k%M*(t-s+<span class="number">1</span>)%M)%M;</span><br><span class="line">b[p].z=(b[p].z+k%M)%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mul</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> k1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k1==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[p].x=k*d[p].x%M;</span><br><span class="line">b[p].x=k*b[p].x%M;</span><br><span class="line">b1[p].x=k*b1[p].x%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k1==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[p].y=k*d[p].y%M;</span><br><span class="line">b[p].y=k*b[p].y%M;</span><br><span class="line">b1[p].y=k*b1[p].y%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k1==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[p].z=k*d[p].z%M;</span><br><span class="line">b[p].z=k*b[p].z%M;</span><br><span class="line">b1[p].z=k*b1[p].z%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[ls].x=(d[ls].x*b1[p].x%M+(mid-s+<span class="number">1</span>)%M*b[p].x%M)%M;</span><br><span class="line">d[rs].x=(d[rs].x*b1[p].x%M+(t-mid)%M*b[p].x%M)%M;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1[ls].x=(b1[ls].x*b1[p].x)%M;</span><br><span class="line">b1[rs].x=(b1[rs].x*b1[p].x)%M;</span><br><span class="line">b[ls].x=(b[ls].x*b1[p].x%M+b[p].x%M)%M;</span><br><span class="line">b[rs].x=(b[rs].x*b1[p].x%M+b[p].x%M)%M;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1[p].x=<span class="number">1</span>;</span><br><span class="line">b[p].x=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[ls].y=(d[ls].y*b1[p].y%M+(mid-s+<span class="number">1</span>)%M*b[p].y%M)%M;</span><br><span class="line">d[rs].y=(d[rs].y*b1[p].y%M+(t-mid)%M*b[p].y%M)%M;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1[ls].y=(b1[ls].y*b1[p].y)%M;</span><br><span class="line">b1[rs].y=(b1[rs].y*b1[p].y)%M;</span><br><span class="line">b[ls].y=(b[ls].y*b1[p].y%M+b[p].y%M)%M;</span><br><span class="line">b[rs].y=(b[rs].y*b1[p].y%M+b[p].y%M)%M;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1[p].y=<span class="number">1</span>;</span><br><span class="line">b[p].y=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[ls].z=(d[ls].z*b1[p].z%M+(mid-s+<span class="number">1</span>)%M*b[p].z%M)%M;</span><br><span class="line">d[rs].z=(d[rs].z*b1[p].z%M+(t-mid)%M*b[p].z%M)%M;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1[ls].z=(b1[ls].z*b1[p].z)%M;</span><br><span class="line">b1[rs].z=(b1[rs].z*b1[p].z)%M;</span><br><span class="line">b[ls].z=(b[ls].z*b1[p].z%M+b[p].z%M)%M;</span><br><span class="line">b[rs].z=(b[rs].z*b1[p].z%M+b[p].z%M)%M;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1[p].z=<span class="number">1</span>;</span><br><span class="line">b[p].z=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)d[p].x=(d[ls].x+d[rs].x)%M;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">2</span>)d[p].y=(d[ls].y+d[rs].y)%M;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">3</span>)d[p].z=(d[ls].z+d[rs].z)%M;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update1</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> k,<span class="type">int</span> k1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=s &amp;&amp; r&gt;=t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(p,k,s,t,k1);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(p,s,t,k1);</span><br><span class="line"><span class="keyword">if</span>(l&lt;=mid) <span class="built_in">update1</span>(ls,l,r,s,mid,k,k1);</span><br><span class="line"><span class="keyword">if</span>(r&gt;mid) <span class="built_in">update1</span>(rs,l,r,mid+<span class="number">1</span>,t,k,k1);</span><br><span class="line"><span class="built_in">pushup</span>(p,k1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update2</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> k,<span class="type">int</span> k1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=s &amp;&amp; r&gt;=t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">mul</span>(p,k,s,t,k1);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(p,s,t,k1);</span><br><span class="line"><span class="keyword">if</span>(l&lt;=mid) <span class="built_in">update2</span>(ls,l,r,s,mid,k,k1);</span><br><span class="line"><span class="keyword">if</span>(r&gt;mid) <span class="built_in">update2</span>(rs,l,r,mid+<span class="number">1</span>,t,k,k1);</span><br><span class="line"><span class="built_in">pushup</span>(p,k1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=s &amp;&amp; r&gt;=t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>) <span class="keyword">return</span> d[p].x;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">2</span>) <span class="keyword">return</span> d[p].y;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">3</span>) <span class="keyword">return</span> d[p].z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(p,s,t,k);</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=mid) ans=(ans+<span class="built_in">query</span>(ls,l,r,s,mid,k))%M;</span><br><span class="line"><span class="keyword">if</span>(r&gt;mid) ans=(ans+<span class="built_in">query</span>(rs,l,r,mid+<span class="number">1</span>,t,k))%M;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="type">int</span> sb,l,r;</span><br><span class="line"><span class="keyword">if</span>(n&lt;=<span class="number">1000</span>&amp;&amp;m&lt;=<span class="number">1000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;sb&gt;&gt;l&gt;&gt;r;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> xx,yy,zz;</span><br><span class="line">cin&gt;&gt;xx&gt;&gt;yy&gt;&gt;zz;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=l;j&lt;=r;j++)</span><br><span class="line">&#123;</span><br><span class="line">a[j].x=(a[j].x+xx%M)%M;</span><br><span class="line">a[j].y=(a[j].y+yy%M)%M;</span><br><span class="line">a[j].z=(a[j].z+zz%M)%M;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> kl;</span><br><span class="line">cin&gt;&gt;kl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=l;j&lt;=r;j++)</span><br><span class="line">&#123;</span><br><span class="line">a[j].x=kl%M*a[j].x%M;</span><br><span class="line">a[j].y=kl%M*a[j].y%M;</span><br><span class="line">a[j].z=kl%M*a[j].z%M;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=l;j&lt;=r;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c=a[j].x;</span><br><span class="line">a[j].x=a[j].y;</span><br><span class="line">a[j].y=a[j].z;</span><br><span class="line">a[j].z=c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ans1=<span class="number">0</span>,ans2=<span class="number">0</span>,ans3=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=l;j&lt;=r;j++)</span><br><span class="line">&#123;</span><br><span class="line">ans1=(ans1+a[j].x%M)%M;</span><br><span class="line">ans2=(ans2+a[j].y%M)%M;</span><br><span class="line">ans3=(ans3+a[j].z%M)%M;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;(((ans1*ans1)%M+(ans2*ans2)%M)%M+(ans3*ans3)%M)%M&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4e5</span>+<span class="number">39</span>;i++) </span><br><span class="line">&#123;</span><br><span class="line">b1[i].x=<span class="number">1</span>,b1[i].y=<span class="number">1</span>,b[i].z=<span class="number">1</span>;</span><br><span class="line">d[i].x=<span class="number">0</span>,d[i].y=<span class="number">0</span>,d[i].z=<span class="number">0</span>;</span><br><span class="line">b[i].x=<span class="number">0</span>,b[i].y=<span class="number">0</span>,b[i].z=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;sb&gt;&gt;l&gt;&gt;r;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> zyc,ycz,czy;</span><br><span class="line">cin&gt;&gt;zyc&gt;&gt;ycz&gt;&gt;czy;</span><br><span class="line"><span class="built_in">update1</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,zyc,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">update1</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,ycz,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">update1</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,czy,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line">cin&gt;&gt;k;</span><br><span class="line"><span class="built_in">update2</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,k,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">update2</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,k,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">update2</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,k,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sb==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k11=<span class="built_in">query</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="type">int</span> k22=<span class="built_in">query</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,<span class="number">2</span>);</span><br><span class="line"><span class="type">int</span> k33=<span class="built_in">query</span>(<span class="number">1</span>,l,r,<span class="number">1</span>,n,<span class="number">3</span>);</span><br><span class="line">cout&lt;&lt;(((k11*k11)%M+(k22*k22)%M)%M+(k33*k33)%M)%M&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;总得分：405&lt;/p&gt;</summary>
    
    
    
    
    <category term="线段树" scheme="http://zhang2514yuchi.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="大模拟" scheme="http://zhang2514yuchi.github.io/tags/%E5%A4%A7%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2018 提高组 货币系统</title>
    <link href="http://zhang2514yuchi.github.io/2022/03/03/P5020/"/>
    <id>http://zhang2514yuchi.github.io/2022/03/03/P5020/</id>
    <published>2022-03-03T10:26:59.000Z</published>
    <updated>2022-03-03T10:43:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>一道巧妙的背包问题</p><p>可以想到用完全背包解决</p><span id="more"></span><p>复杂度$O(n^2 \times V)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n+<span class="number">1</span>);</span><br><span class="line"><span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">maxx=<span class="built_in">max</span>(maxx,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=maxx;j++)</span><br><span class="line">&#123;</span><br><span class="line">b[j]=-inf;</span><br><span class="line">&#125;</span><br><span class="line">b[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> v=a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j==i) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=a[j];k&lt;=v;k++)</span><br><span class="line">&#123;</span><br><span class="line">b[k]=<span class="built_in">max</span>(b[k],b[k-a[j]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b[a[i]]!=-inf) ans++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;n-ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/.io//03/03/P5020/1.png" class title="h"><p>这个复杂度一定会T，所以我们考虑优化</p><p>优化思路是排序</p><p>排序后的完全背包每个位置只会受小于等于它的数影响，而且事实上他也只能被小于等于自己的影响</p><p>保证正确性</p><p>$O（max(n \log n,n \times V））$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n+<span class="number">1</span>);</span><br><span class="line"><span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">maxx=<span class="built_in">max</span>(maxx,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=maxx;i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i]=-inf;</span><br><span class="line">&#125;</span><br><span class="line">b[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b[a[i]]!=-inf) ans++;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=a[i];j&lt;=maxx;j++)</span><br><span class="line">&#123;</span><br><span class="line">b[j]=<span class="built_in">max</span>(b[j],b[j-a[i]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;n-ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/.io//03/03/P5020/2.png" class title="k">]]></content>
    
    
    <summary type="html">&lt;p&gt;一道巧妙的背包问题&lt;/p&gt;
&lt;p&gt;可以想到用完全背包解决&lt;/p&gt;</summary>
    
    
    
    
    <category term="dp" scheme="http://zhang2514yuchi.github.io/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>数论分块</title>
    <link href="http://zhang2514yuchi.github.io/2022/02/21/%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97/"/>
    <id>http://zhang2514yuchi.github.io/2022/02/21/%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97/</id>
    <published>2022-02-21T07:13:38.000Z</published>
    <updated>2022-02-21T07:15:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数论分块"><a href="#数论分块" class="headerlink" title="数论分块"></a>数论分块</h1><p>对于一类含有$\lfloor \frac{𝑛}{i} \rfloor$的求和式 (𝑛 为常数)，由于$\lfloor \frac{𝑛}{i} \rfloor$单调不增，故存在多个区间[𝑙,𝑟], 使得$\lfloor \frac{𝑛}{i} \rfloor$&#x3D;$\lfloor \frac{𝑛}{j} \rfloor$  (𝑖,𝑗∈[𝑙,𝑟]) 成立。</p><p>对于任意一个𝑖，最大的满足上式的 𝑗&#x3D;$\lfloor {\frac{n}{\lfloor \frac{𝑛}{i} \rfloor} }\rfloor$</p><span id="more"></span><h1 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h1><p>$\lfloor \frac{𝑛}{i} \rfloor \leqslant\frac{𝑛}{i}$<br>$\Rightarrow \lfloor {\frac{n}{\lfloor \frac{𝑛}{i} \rfloor} }\rfloor \geqslant \lfloor {\frac{n}{ \frac{𝑛}{i} } }\rfloor &#x3D;\lfloor i \rfloor&#x3D;i$<br>$\Rightarrow i \leqslant \lfloor {\frac{n}{\lfloor \frac{𝑛}{i} \rfloor} } \rfloor<br>$ </p><p>即$j&#x3D; \lfloor {\frac{n}{\lfloor \frac{𝑛}{i} \rfloor} }\rfloor$</p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h3 id="经典题-P1403-AHOI2005-约数研究"><a href="#经典题-P1403-AHOI2005-约数研究" class="headerlink" title="经典题 P1403 [AHOI2005]约数研究"></a>经典题<a href="https://www.luogu.com.cn/problem/P1403" title=" P1403 [AHOI2005]约数研究"> P1403 [AHOI2005]约数研究</a></h3><p>题意：<br>$f(x)$表示x的约数个数，求$\sum_{i&#x3D;1}^nf(i)$<br>思路：<br>对于$i$,在$1～n$中，他的倍数有$\lfloor \frac{𝑛}{i} \rfloor$个，因此$1～n$中共有个以$i$为约数的数。<br>因此$\sum_{i&#x3D;1}^nf(i)&#x3D;\sum_{i&#x3D;1}^n\lfloor \frac{𝑛}{i} \rfloor$</p><p>现在考虑数论分块<br>对于每一个l∈[1,n],存在区间[l,r],$r&#x3D;\lfloor {\frac{n}{\lfloor \frac{𝑛}{i} \rfloor} }\rfloor$<br>使得$\lfloor \frac{𝑛}{i} \rfloor$&#x3D;$\lfloor \frac{𝑛}{j} \rfloor$<br>区间贡献$(r-l+1)\times \lfloor \frac{𝑛}{i} \rfloor$.<br>$O(2\sqrt n)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=rd;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,j=<span class="number">1</span>;i&lt;=n;i=j+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        j=n/(n/i);</span><br><span class="line">        ans+=(j-i+<span class="number">1</span>)*(n/i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="CQOI2007-余数求和"><a href="#CQOI2007-余数求和" class="headerlink" title="[CQOI2007]余数求和"></a><a href="https://www.luogu.com.cn/problem/P2261" title="[CQOI2007]余数求和">[CQOI2007]余数求和</a></h3><p>思路：<br>$$<br>\sum_{i&#x3D;1}^{n} k\ mod  \quad i&#x3D;\sum_{i&#x3D;1}^{n} (k-\lfloor \frac{k}{i} \rfloor \times i)<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> k,n;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=rd,k=rd;</span><br><span class="line">    <span class="type">int</span> ans=n*k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,j=<span class="number">1</span>;i&lt;=n;i=j+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k/i==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        j=<span class="built_in">min</span>(n,k/(k/i));</span><br><span class="line">        ans-=(k/i)*(j+i)*(j-i+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="P2424-约数和"><a href="#P2424-约数和" class="headerlink" title="P2424 约数和"></a><a href="https://www.luogu.com.cn/problem/P2424" title="P2424 约数和">P2424 约数和</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x,y;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,j=<span class="number">1</span>;i&lt;=a;i=j+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        j=a/(a/i);</span><br><span class="line">        ans+=(a/i)*(i+j)*(j-i+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=rd,y=rd;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">f</span>(y)-<span class="built_in">f</span>(x<span class="number">-1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数论分块&quot;&gt;&lt;a href=&quot;#数论分块&quot; class=&quot;headerlink&quot; title=&quot;数论分块&quot;&gt;&lt;/a&gt;数论分块&lt;/h1&gt;&lt;p&gt;对于一类含有$\lfloor \frac{𝑛}{i} \rfloor$的求和式 (𝑛 为常数)，由于$\lfloor \frac{𝑛}{i} \rfloor$单调不增，故存在多个区间[𝑙,𝑟], 使得$\lfloor \frac{𝑛}{i} \rfloor$&amp;#x3D;$\lfloor \frac{𝑛}{j} \rfloor$  (𝑖,𝑗∈[𝑙,𝑟]) 成立。&lt;/p&gt;
&lt;p&gt;对于任意一个𝑖，最大的满足上式的 𝑗&amp;#x3D;$\lfloor {\frac{n}{\lfloor \frac{𝑛}{i} \rfloor} }\rfloor$&lt;/p&gt;</summary>
    
    
    
    
    <category term="数论" scheme="http://zhang2514yuchi.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="分块" scheme="http://zhang2514yuchi.github.io/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>小z的袜子[国家集训队]</title>
    <link href="http://zhang2514yuchi.github.io/2022/02/21/P1494/"/>
    <id>http://zhang2514yuchi.github.io/2022/02/21/P1494/</id>
    <published>2022-02-21T04:56:22.000Z</published>
    <updated>2022-02-21T05:27:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>复健一波莫队，发现最经典的模版竟然没做过 </p><p>正好复习下这种简单的</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P1494" title="P1494">P1494</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m,ans=<span class="number">0</span>,block;</span><br><span class="line"><span class="type">int</span> col[Max],a[Max];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r,id;</span><br><span class="line">&#125;q[Max];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;res[Max];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;<span class="keyword">return</span> b == <span class="number">0</span> ? a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a.l/block)^(b.l/block)?(a.l/block)&lt;(b.l/block):(a.l/block)&amp;<span class="number">1</span>?a.r&lt;b.r:a.r&gt;b.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans+=<span class="number">2</span>*col[a[x]]+<span class="number">1</span>;</span><br><span class="line">    col[a[x]]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans+=<span class="number">1</span><span class="number">-2</span>*col[a[x]];</span><br><span class="line">    col[a[x]]--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;q[i].l&gt;&gt;q[i].r;</span><br><span class="line">        q[i].id=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q+<span class="number">1</span>,q+<span class="number">1</span>+m,cmp);</span><br><span class="line">    <span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> ql=q[i].l,qr=q[i].r;</span><br><span class="line">        <span class="keyword">while</span>(ql&lt;l) <span class="built_in">add</span>(--l);</span><br><span class="line">        <span class="keyword">while</span>(ql&gt;l) <span class="built_in">del</span>(l++);</span><br><span class="line">        <span class="keyword">while</span>(qr&lt;r) <span class="built_in">del</span>(r--);</span><br><span class="line">        <span class="keyword">while</span>(qr&gt;r) <span class="built_in">add</span>(++r);</span><br><span class="line">        <span class="type">int</span> len=qr-ql+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(ans-len==<span class="number">0</span>) &#123;res[q[i].id].x=<span class="number">0</span>,res[q[i].id].y=<span class="number">1</span>;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="type">int</span> t=<span class="built_in">gcd</span>(ans-len,(len<span class="number">-1</span>)*len);</span><br><span class="line">        res[q[i].id].x=(ans-len)/t;</span><br><span class="line">        res[q[i].id].y=(len<span class="number">-1</span>)*len/t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;res[i].x&lt;&lt;<span class="string">&quot;/&quot;</span>&lt;&lt;res[i].y&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;复健一波莫队，发现最经典的模版竟然没做过 &lt;/p&gt;
&lt;p&gt;正好复习下这种简单的&lt;/p&gt;</summary>
    
    
    
    
    <category term="莫队" scheme="http://zhang2514yuchi.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>P4513 小白逛公园</title>
    <link href="http://zhang2514yuchi.github.io/2022/02/21/P4513/"/>
    <id>http://zhang2514yuchi.github.io/2022/02/21/P4513/</id>
    <published>2022-02-21T04:56:22.000Z</published>
    <updated>2022-02-21T05:27:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>题意：<br>序列，单点修改，询问区间最大子段和<br>最大子段和指的是找出一个可以是空的子区间，和最大</p><span id="more"></span><p>著名的新手杀手题。。。<br>其实也不难<br>对于每个区间，维护一个最大前缀，最大后缀，以及区间内部的答案<br>每次合并的时候，即答案选取左子区间的max，右子区间的max，或者左子区间的最大后缀+右子区间的最大前缀</p><p><a href="https://www.luogu.com.cn/problem/P4513" title="P4513">P4513</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mid ((s+t)&gt;&gt;1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls (p&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs (ls+1)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[Max];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> res,sum,lm,rm;</span><br><span class="line">&#125;d[Max*<span class="number">4</span>];</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[p].sum=d[ls].sum+d[rs].sum;</span><br><span class="line">    d[p].res=<span class="built_in">max</span>(d[ls].rm+d[rs].lm,<span class="built_in">max</span>(d[rs].res,d[ls].res));</span><br><span class="line">    <span class="keyword">if</span>(d[rs].lm&gt;d[ls].lm-d[ls].sum) d[p].lm=d[ls].sum+d[rs].lm;</span><br><span class="line">    <span class="keyword">else</span> d[p].lm=d[ls].lm;</span><br><span class="line">    <span class="keyword">if</span>(d[ls].rm&gt;d[rs].rm-d[rs].sum) d[p].rm=d[rs].sum+d[ls].rm;</span><br><span class="line">    <span class="keyword">else</span> d[p].rm=d[rs].rm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t) </span><br><span class="line">    &#123;</span><br><span class="line">        d[p].sum=a[s];</span><br><span class="line">        d[p].lm=a[s];</span><br><span class="line">        d[p].rm=a[s];</span><br><span class="line">        d[p].res=a[s];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(ls,s,mid);</span><br><span class="line">    <span class="built_in">build</span>(rs,mid+<span class="number">1</span>,t);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> x,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line">        d[p].sum=c;</span><br><span class="line">        d[p].res=c;</span><br><span class="line">        d[p].lm=c;</span><br><span class="line">        d[p].rm=c;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) <span class="built_in">update</span>(ls,s,mid,x,c);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(rs,mid+<span class="number">1</span>,t,x,c);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">query</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s&amp;&amp;r&gt;=t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d[p];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;=mid) <span class="keyword">return</span> <span class="built_in">query</span>(ls,l,r,s,mid);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(l&gt;mid) <span class="keyword">return</span> <span class="built_in">query</span>(rs,l,r,mid+<span class="number">1</span>,t);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> x=<span class="built_in">query</span>(ls,l,r,s,mid),y=<span class="built_in">query</span>(rs,l,r,mid+<span class="number">1</span>,t);</span><br><span class="line">        node ans;</span><br><span class="line">        ans.sum=x.sum+y.sum;</span><br><span class="line">        ans.res=<span class="built_in">max</span>(x.rm+y.lm,<span class="built_in">max</span>(x.res,y.res));</span><br><span class="line">        <span class="keyword">if</span>(y.lm&gt;x.lm-x.sum) ans.lm=x.sum+y.lm;</span><br><span class="line">        <span class="keyword">else</span> ans.lm=x.lm;</span><br><span class="line">        <span class="keyword">if</span>(x.rm&gt;y.rm-y.sum) ans.rm=y.sum+x.rm;</span><br><span class="line">        <span class="keyword">else</span> ans.rm=y.rm;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y,z;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(z&lt;y) <span class="built_in">swap</span>(z,y);</span><br><span class="line">            cout&lt;&lt;<span class="built_in">query</span>(<span class="number">1</span>,y,z,<span class="number">1</span>,n).res&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>,<span class="number">1</span>,n,y,z);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题意：&lt;br&gt;序列，单点修改，询问区间最大子段和&lt;br&gt;最大子段和指的是找出一个可以是空的子区间，和最大&lt;/p&gt;</summary>
    
    
    
    
    <category term="线段树" scheme="http://zhang2514yuchi.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="http://zhang2514yuchi.github.io/2022/02/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://zhang2514yuchi.github.io/2022/02/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2022-02-21T04:53:00.000Z</published>
    <updated>2022-02-21T08:49:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>模版总结</p><span id="more"></span><h1 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h1><p>脑子里画出这个图</p><img src="/.io//02/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/1.png" class title="树状数组"><h2 id="区间查-x2F-单点改"><a href="#区间查-x2F-单点改" class="headerlink" title="区间查&#x2F;单点改"></a>区间查&#x2F;单点改</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> c[Max],a[Max];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> x&amp;-x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=n)&#123;c[p]+=k;p+=<span class="built_in">lowbit</span>(p);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;ans+=c[p];p-=<span class="built_in">lowbit</span>(p);&#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="差分实现区间改-x2F-单点查"><a href="#差分实现区间改-x2F-单点查" class="headerlink" title="差分实现区间改&#x2F;单点查"></a>差分实现区间改&#x2F;单点查</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> c[Max],a[Max];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> x&amp;-x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=n)&#123;c[p]+=k;p+=<span class="built_in">lowbit</span>(p);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;ans+=c[p];p-=<span class="built_in">lowbit</span>(p);&#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,n) &#123;cin&gt;&gt;a[i];<span class="built_in">add</span>(i,a[i]-a[i<span class="number">-1</span>]);&#125;</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,l,r,k;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;l&gt;&gt;r&gt;&gt;k;</span><br><span class="line">            <span class="built_in">add</span>(l,k),<span class="built_in">add</span>(r+<span class="number">1</span>,-k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;k;</span><br><span class="line">            cout&lt;&lt;<span class="built_in">sum</span>(k)&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="差分实现区间改-x2F-区间查"><a href="#差分实现区间改-x2F-区间查" class="headerlink" title="差分实现区间改&#x2F;区间查"></a>差分实现区间改&#x2F;区间查</h2><p>$$<br>sum[i]&#x3D;\sum_{j&#x3D;1}^i c[j] \times(i-j+1)<br>$$</p><p>$$<br>sum[i]&#x3D;(i+1) \times \sum_{j&#x3D;1}^i c[j] -\sum_{j&#x3D;1}^i c[j] \times j<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> d1[Max],d2[Max],a[Max],b[Max];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> x&amp;-x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> *c,<span class="type">int</span> p,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=n)&#123;c[p]+=k;p+=<span class="built_in">lowbit</span>(p);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> *c,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;ans+=c[p];p-=<span class="built_in">lowbit</span>(p);&#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b[x]+(x+<span class="number">1</span>)*<span class="built_in">sum</span>(d1,x)-<span class="built_in">sum</span>(d2,x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,n) </span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        b[i]=b[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,l,r,k;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;k;</span><br><span class="line">            <span class="built_in">add</span>(d1,l,k),<span class="built_in">add</span>(d1,r+<span class="number">1</span>,-k),<span class="built_in">add</span>(d2,l,k*l),<span class="built_in">add</span>(d2,r+<span class="number">1</span>,-k*(r+<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="built_in">f</span>(r)-<span class="built_in">f</span>(l<span class="number">-1</span>)&lt;&lt;endl; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最值"><a href="#最值" class="headerlink" title="最值"></a>最值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="type">int</span> a[Max],c[Max],MAX[Max];</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> x&amp;-x;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[p]=k;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        c[p]=<span class="built_in">max</span>(c[p],k);</span><br><span class="line">        <span class="type">int</span> t=<span class="built_in">lowbit</span>(p);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;t;i*=<span class="number">2</span>) c[p]=<span class="built_in">max</span>(c[p],c[p-i]);</span><br><span class="line">        p+=<span class="built_in">lowbit</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,a[r]); </span><br><span class="line">        <span class="keyword">if</span>(r==l) <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">for</span>(r-=<span class="number">1</span>;r-l&gt;=<span class="built_in">lowbit</span>(r);r-=<span class="built_in">lowbit</span>(r)) ans=<span class="built_in">max</span>(ans,c[r]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,n) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,n) <span class="built_in">add</span>(i,a[i]);</span><br><span class="line">    <span class="type">int</span> y,x;</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,m)</span><br><span class="line">    &#123;</span><br><span class="line">ch=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(ch&lt;<span class="string">&#x27;A&#x27;</span>||ch&gt;<span class="string">&#x27;Z&#x27;</span>) ch=<span class="built_in">getchar</span>();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;Q&#x27;</span>) cout&lt;&lt;<span class="built_in">query</span>(x,y)&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(y&lt;=a[x]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">add</span>(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> mid (s+((t-s)&gt;&gt;1))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls (p&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs ((p&lt;&lt;1)|1)</span></span><br></pre></td></tr></table></figure><p>以下代码中<br>$s,t$代表当前区间<br>$l,r$代表询问区间</p><h2 id="区间修改，区间查询"><a href="#区间修改，区间查询" class="headerlink" title="区间修改，区间查询"></a>区间修改，区间查询</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[Max],d[Max*<span class="number">4</span>],b[Max*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[p]=d[ls]+d[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b[p]!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        b[ls]+=b[p],b[rs]+=b[p];</span><br><span class="line">        d[ls]+=b[p]*(mid+<span class="number">1</span>-s);</span><br><span class="line">        d[rs]+=b[p]*(t-mid);</span><br><span class="line">        b[p]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t) </span><br><span class="line">    &#123;</span><br><span class="line">        d[p]=a[s];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(s,mid,ls);</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,t,rs);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s&amp;&amp;t&lt;=r) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d[p];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(s,t,p);</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid) sum+=<span class="built_in">query</span>(l,r,s,mid,ls);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid) sum+=<span class="built_in">query</span>(l,r,mid+<span class="number">1</span>,t,rs);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s&amp;&amp;t&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        d[p]+=(t-s+<span class="number">1</span>)*c;</span><br><span class="line">        b[p]+=c;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(s,t,p);</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid) <span class="built_in">update</span>(l,r,s,mid,ls,c);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid) <span class="built_in">update</span>(l,r,mid+<span class="number">1</span>,t,rs,c);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单点修改，区间查询"><a href="#单点修改，区间查询" class="headerlink" title="单点修改，区间查询"></a>单点修改，区间查询</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[Max],d[Max*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[p]=d[ls]+d[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t) </span><br><span class="line">    &#123;</span><br><span class="line">        d[p]=a[s];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(s,mid,ls);</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,t,rs);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s&amp;&amp;t&lt;=r) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d[p];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// pushdown(s,t,p);</span></span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid) sum+=<span class="built_in">query</span>(l,r,s,mid,ls);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid) sum+=<span class="built_in">query</span>(l,r,mid+<span class="number">1</span>,t,rs);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line">        d[p]+=c;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// pushdown(s,t,p);</span></span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) <span class="built_in">update</span>(x,s,mid,ls,c);</span><br><span class="line">    <span class="keyword">if</span>(x&gt;mid) <span class="built_in">update</span>(x,mid+<span class="number">1</span>,t,rs,c);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单点查询，区间修改"><a href="#单点查询，区间修改" class="headerlink" title="单点查询，区间修改"></a>单点查询，区间修改</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[Max],d[Max*<span class="number">4</span>],b[Max*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[p]=d[ls]+d[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b[p]!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        b[ls]+=b[p],b[rs]+=b[p];</span><br><span class="line">        d[ls]+=b[p]*(mid+<span class="number">1</span>-s);</span><br><span class="line">        d[rs]+=b[p]*(t-mid);</span><br><span class="line">        b[p]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line">        d[p]=a[s];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(s,mid,ls);</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,t,rs);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d[p];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(s,t,p);</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid)  <span class="keyword">return</span> <span class="built_in">query</span>(x,s,mid,ls);</span><br><span class="line">    <span class="keyword">if</span>(x&gt;mid) <span class="keyword">return</span> <span class="built_in">query</span>(x,mid+<span class="number">1</span>,t,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> p,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s&amp;&amp;t&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        d[p]+=c*(t-s+<span class="number">1</span>);</span><br><span class="line">        b[p]+=c;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(s,t,p);</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid) <span class="built_in">update</span>(l,r,s,mid,ls,c);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid) <span class="built_in">update</span>(l,r,mid+<span class="number">1</span>,t,rs,c);</span><br><span class="line">    <span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="主席树"><a href="#主席树" class="headerlink" title="主席树"></a>主席树</h1><img src="/.io//02/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2.png" class title="主席树"><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> cnt,n,m;</span><br><span class="line"><span class="type">int</span> a[Max],root[Max];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Tree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r,val;</span><br><span class="line">&#125;tree[Max];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">clone</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    tree[cnt]=tree[p];</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">build</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p=++cnt;</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[cnt].val=a[s];</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    tree[p].l=<span class="built_in">build</span>(tree[p].l,s,mid);</span><br><span class="line">    tree[p].r=<span class="built_in">build</span>(tree[p].r,mid+<span class="number">1</span>,t);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">update</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p=<span class="built_in">clone</span>(p);</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[p].val=v;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) tree[p].l=<span class="built_in">update</span>(tree[p].l,s,mid,x,v);</span><br><span class="line">    <span class="keyword">if</span>(x&gt;mid) tree[p].r=<span class="built_in">update</span>(tree[p].r,mid+<span class="number">1</span>,t,x,v);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==t) <span class="keyword">return</span> tree[p].val;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) <span class="keyword">return</span> <span class="built_in">query</span>(tree[p].l,s,mid,x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(tree[p].r,mid+<span class="number">1</span>,t,x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">pos</span>(i,<span class="number">1</span>,n) cin&gt;&gt;a[i];</span><br><span class="line">    root[<span class="number">0</span>]=<span class="built_in">build</span>(<span class="number">0</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区间第k小"><a href="#区间第k小" class="headerlink" title="区间第k小"></a>区间第k小</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">clone</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    tree[cnt]=tree[p];</span><br><span class="line">    tree[cnt].val++;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">build</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p=++cnt;</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        tree[cnt].val=a[s];</span></span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    tree[p].l=<span class="built_in">build</span>(tree[p].l,s,mid);</span><br><span class="line">    tree[p].r=<span class="built_in">build</span>(tree[p].r,mid+<span class="number">1</span>,t);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">update</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p=<span class="built_in">clone</span>(p);</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        tree[p].val+=v;</span></span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) tree[p].l=<span class="built_in">update</span>(tree[p].l,s,mid,x,v);</span><br><span class="line">    <span class="keyword">if</span>(x&gt;mid) tree[p].r=<span class="built_in">update</span>(tree[p].r,mid+<span class="number">1</span>,t,x,v);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query1</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> q,<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=tree[tree[p].l].val-tree[tree[q].l].val;</span><br><span class="line">    <span class="keyword">if</span>(s==t) <span class="keyword">return</span> b[s];</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=k) <span class="keyword">return</span> <span class="built_in">query1</span>(tree[p].l,tree[q].l,s,mid,k);</span><br><span class="line">    <span class="keyword">else</span>  <span class="keyword">return</span> <span class="built_in">query1</span>(tree[p].r,tree[q].r,mid+<span class="number">1</span>,t,k-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        b[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    <span class="type">int</span> nn=<span class="built_in">unique</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+n)-b<span class="number">-1</span>;</span><br><span class="line">    rt[<span class="number">0</span>]=<span class="built_in">build</span>(<span class="number">0</span>,<span class="number">1</span>,nn);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x=<span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+nn,a[i])-b;</span><br><span class="line">        rt[i]=<span class="built_in">update</span>(rt[i<span class="number">-1</span>],<span class="number">1</span>,nn,x,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y,z;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">query1</span>(rt[y],rt[x<span class="number">-1</span>],<span class="number">1</span>,nn,z)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;模版总结&lt;/p&gt;</summary>
    
    
    
    
    <category term="线段树" scheme="http://zhang2514yuchi.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="树状数组" scheme="http://zhang2514yuchi.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
    <category term="主席树" scheme="http://zhang2514yuchi.github.io/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>从博客园转来HEXO</title>
    <link href="http://zhang2514yuchi.github.io/2022/02/20/%E4%BB%8B%E7%BB%8D/"/>
    <id>http://zhang2514yuchi.github.io/2022/02/20/%E4%BB%8B%E7%BB%8D/</id>
    <published>2022-02-20T14:46:56.000Z</published>
    <updated>2022-02-21T05:42:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>忍不了在博客园的那个了</p><p>在网上找了个教程自己搭一个hexo试试</p><p>后面陆续会手动把笔记都搬过来</p><span id="more"></span><p><a href="https://www.cnblogs.com/juuich/">博客园原址</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;忍不了在博客园的那个了&lt;/p&gt;
&lt;p&gt;在网上找了个教程自己搭一个hexo试试&lt;/p&gt;
&lt;p&gt;后面陆续会手动把笔记都搬过来&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
